/* Use an immediately invoked function to isolate variables */
(function(){

  // Fix for window.location.origin for IE
  if (!window.location.origin) {
    window.location.origin = window.location.protocol + "//" +
      window.location.hostname + (window.location.port ? ':' +
      window.location.port: '');
  }

  <%= render 'load_jquery' %>

  /* main - Main function for the voc invitation.  This function is called once */
  /* jQuery has been loaded.                                                */
  function main() {
    /* Browser detected as: <%= browser.inspect %> */
    if(jQuery.browser.mobile) {
      var $target = jQuery('#<%= params[:mobile_target_id] %>');
      var targetHTML = $target.html();
      var pageurl  = window.location.origin + window.location.pathname;
      var popurl = "http://<%= APP_CONFIG['host'] %>/surveys/<%= @survey.id %>?";
      <% if params[:stylesheet] %>
          popurl = popurl + "stylesheet=<%= params[:stylesheet] %>&";
      <% end %>
      <% if @test_invitation %>
        popurl = popurl + "&test_invitation=true"
      <% end %>
      popurl = popurl + "page_url=" + pageurl;
      var aTag = "<a href='" + popurl + "' target='_blank'>" + targetHTML + "</a>";
      $target.html(aTag);
    } else {
      jQuery('#<%= params[:mobile_target_id] %>').hide();
      var cookieName = 'survey_invitation_<%= params[:survey_id] %>';
      var invitationInterval = <%= @survey.invitation_interval %>;
      if(invitationInterval == 0 || readCookie(cookieName) == null || <%= @test_invitation %>) {
        var invite = false;
        <% if @survey.invitation_percent == 100 || @test_invitation %>
          invite = true
        <% elsif @survey.invitation_percent > 0 %>
          invite = Math.random() < <%= @survey.invitation_percent %> / 100
        <% end %>
        if(invite) {
          /* Load the passed stylesheet into the page */
          var stylesheet = '<%= params[:stylesheet] %>';
          if(stylesheet.length > 0) {
            jQuery('head').append('<link rel="stylesheet" href="' + stylesheet + '" type="text/css" />');
          }

          loadModal();
          <% unless @test_invitation %>
            if(invitationInterval > 0) {
              createCookie(cookieName, true, invitationInterval);
            }
          <% end %>
        }
      }
    }
  }

  function createCookie(name,value,days) {
    if (days) {
      var date = new Date();
      date.setTime(date.getTime()+(days*24*60*60*1000));
      var expires = "; expires="+date.toGMTString();
    }
    else var expires = "";
    document.cookie = name+"="+value+expires+"; path=/";
  }

  function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
      var c = ca[i];
      while (c.charAt(0)==' ') c = c.substring(1,c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
  }


  /*
  ============================================
  License for Application
  ============================================
  This license is governed by United States copyright law, and with respect to matters
  of tort, contract, and other causes of action it is governed by North Carolina law,
  without regard to North Carolina choice of law provisions. The forum for any dispute
  resolution shall be in Wake County, North Carolina.
  Redistribution and use in source and binary forms, with or without modification, are
  permitted provided that the following conditions are met:
  1. Redistributions of source code must retain the above copyright notice, this list
  of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright notice, this
  list of conditions and the following disclaimer in the documentation and/or other
  materials provided with the distribution.
  3. The name of the author may not be used to endorse or promote products derived from
  this software without specific prior written permission.
  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */

  // jQuery formatted selector to search for focusable items
  var focusableElementsString = "a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]:not([tabindex='-1'])";

  // store the item that has focus before opening the modal window
  var focusedElementBeforeModal;

  function loadModal() {
    jQuery(function() {
      showInvitation();

      jQuery('#startModal').click(function(e) {
        showModal(jQuery('#vocModal'));
      });
      jQuery('#cancel').click(function(e) {
        hideModal();
      });
      jQuery('#vocCancelButton').click(function(e) {
        hideModal();
      });
      jQuery('#vocEnter').click(function(e) {
        enterButtonModal();
      });
      jQuery('#vocModalCloseButton').click(function(e) {
        hideModal();
      });
      jQuery('#vocModalCloseButton').keydown(function(event) {
        trapSpaceKey(jQuery(this), event, hideModal);
      });
      jQuery('#vocModal').keydown(function(event) {
        trapTabKey(jQuery(this), event);
      });
      jQuery('body').keydown(function(event) {
        trapEscapeKey(jQuery(this), event);
      });
    });

  }

  function trapSpaceKey(obj, evt, f) {
    // if space key pressed
    if (evt.which == 32) {
        // fire the user passed event
        f();
        evt.preventDefault();
    }
  }

  function trapEscapeKey(obj, evt) {
    // if escape pressed
    if (evt.which == 27) {
      hideModal();
      evt.preventDefault();
    }

  }

  function trapTabKey(obj, evt) {

      // if tab or shift-tab pressed
      if (evt.which == 9) {

          // get list of all children elements in given object
          var o = obj.find('*');

          // get list of focusable items
          var focusableItems;
          focusableItems = o.filter(focusableElementsString).filter(':visible')

          // get currently focused item
          var focusedItem;
          focusedItem = jQuery(':focus');

          // get the number of focusable items
          var numberOfFocusableItems;
          numberOfFocusableItems = focusableItems.length

          // get the index of the currently focused item
          var focusedItemIndex;
          focusedItemIndex = focusableItems.index(focusedItem);

          if (evt.shiftKey) {
              //back tab
              // if focused on first item and user preses back-tab, go to the last focusable item
              if (focusedItemIndex == 0) {
                  focusableItems.get(numberOfFocusableItems - 1).focus();
                  evt.preventDefault();
              }

          } else {
              //forward tab
              // if focused on the last item and user preses tab, go to the first focusable item
              if (focusedItemIndex == numberOfFocusableItems - 1) {
                  focusableItems.get(0).focus();
                  evt.preventDefault();
              }
          }
      }

  }

  function enterButtonModal() {
    var modalSurvey = <%= params[:modal] == 'true' %>;
    incrementInvitationAcceptCount();
    if(modalSurvey) {
      openSurveyInModal();
    } else {
      openSurveyInNewWindow();
    }
  }

  function incrementInvitationAcceptCount() {
    invitationurl = "http://<%= APP_CONFIG['host'] %>/surveys/<%= @survey.id %>/invitation_accept"
    <% if @test_invitation %>
      invitationurl = invitationurl + "?test_invitation=true"
    <% end %>
    jQuery.get(invitationurl);
  }

  function openSurveyInModal() {
    var widgetUrl = "http://<%= APP_CONFIG['host'] %>/widget/widget.js?target_id=vocModal&survey_id=<%= @survey.id %>&focus=true"
    jQuery.getScript(widgetUrl).done(function() {
      hideModal();
      showModal(jQuery("#vocModal"));
    });
  }

  function openSurveyInNewWindow() {
    // BEGIN logic for executing the Enter button action for the modal window
    var pageurl  = window.location.origin + window.location.pathname;
    var popurl = "http://<%= APP_CONFIG['host'] %>/surveys/<%= @survey.id %>?";
    <% if params[:stylesheet] %>
    popurl = popurl + "stylesheet=<%= params[:stylesheet] %>&";
    <% end %>
    popurl = popurl + "page_url=" + pageurl;
    <% if @test_invitation %>
      popurl = popurl + "&test_invitation=true"
    <% end %>
    window.open(popurl,"","width=600,height=500,scrollbars,");
    // END logic for executing the Enter button action for the modal window
    hideModal();
  }

  function showInvitation() {
    var targetId = '#<%= params[:target_id] %>';
    var modalSurvey = <%= params[:modal] == 'true' %>;
    jQuery(targetId).html("<%= escape_javascript(render('invite_modal')) %>");
    if(modalSurvey == true && '<%= @survey.suppress_invitation %>' == 'true') {
      enterButtonModal();
    }
    showModal(jQuery('#vocModal'));
  }

  function setFocusToFirstItemInModal(obj){
    // get list of all children elements in given object
    var o = obj.find('*');

    // set the focus to the first keyboard focusable item
    o.filter(focusableElementsString).filter(':visible').first().focus();
  }

  function showModal(obj) {
      jQuery('#site-wrapper').attr('aria-hidden', 'true'); // mark the main page as hidden
      jQuery('#vocModalOverlay').css('display', 'block'); // show overlay
      obj.css('display', 'block'); // make the modal window visible
      obj.attr('aria-hidden', 'false'); // mark the modal window as visible
      jQuery('body').css('overflow', 'hidden'); // hide the main content scrollbar

      // attach a listener to redirect the tab to the modal window if the user somehow gets out of the modal window
      jQuery('body').on('focusin','#site-wrapper',function() {
          setFocusToFirstItemInModal(obj);
      })

      // save current focus
      focusedElementBeforeModal = jQuery(':focus');
      setFocusToFirstItemInModal(obj);
  }

  function hideModal() {
      jQuery('#vocModalOverlay').css('display', 'none'); // hide overlay
      jQuery('#vocModal').css('display', 'none'); // hide the modal window
      jQuery('body').css('overflow', 'visible');  // Re-enable the scrollbar
      jQuery('#vocModal').attr('aria-hidden', 'true'); // mark the modal window as hidden
      jQuery('#mainPage').attr('aria-hidden', 'false'); // mark the main page as visible

      // set focus back to element that had it before the modal was opened
      focusedElementBeforeModal.focus();
  }
})();
