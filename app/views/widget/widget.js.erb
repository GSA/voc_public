/* Use an immediately invoked function to isolate widget variables */
(function(){

  <%= render 'load_jquery' %>

  /* main - Main function for the voc widget.  This function is called once */
  /* jQuery has been loaded.                                                */
  function main() {
    var changeTimer,
      changeInterval = 5000,
      lastSubmitted;

    /* create the voc object */
    window.VOC = {
      Survey: survey,
      Url: "//<%= APP_CONFIG['host'] %>"
    }

    survey = VOC.Survey({surveyID: <%= params[:survey_id].to_i %>});
    <% unless params[:target_id].blank? %>
      survey.setTargetID('<%= params[:target_id] %>');
    <% end %>
    survey.loadSurvey();

  }

  /* define the survey module using the revealing module pattern. */
  function survey(opts){
    var _opts = opts || {};

    var _targetID = _opts.targetID || "vocSurveyDiv";
    var _pageURL  = _opts.pageURL  || (window.location.origin + window.location.pathname);
    var _surveyID = _opts.surveyID;
    var _this = this;

    /* getters and setters for private variables */
    function getTargetID()         { return _targetID; }
    function getSurveyID()         { return _surveyID; }
    function getPageURL()          { return _pageURL;  }

    function setTargetID(targetID) { _targetID = targetID; }
    function setPageURL(url)       { _pageURL = url; }


    /* loadSurvey(success: FunctionPointer, error: FunctionPointer)       */
    /* Attempt to load the survey with id _surveyID into the DOM element  */
    /* with id _targetID.                                                 */
    function loadSurvey() {
      var _hostname = "<%= APP_CONFIG['host'] %>";
      var _url = "//"+ _hostname + "/surveys/" + _surveyID + ".json";
      var target = jQuery("#" + _targetID)
      var surveyID = _surveyID

      /* get the survey identified by id _surveyID and insert it into the */
      /* DOM element _targetID.                                           */
      jQuery.getJSON(_url, "callback=?&page_url=" + _pageURL, function(data){
        target.html(data.html);
        var focus = '<%= params[:focus] %>';
        if(focus == 'true') {
          focusSurvey(_targetID);
        }
      });

      jQuery(document).on("submit", "#"+_targetID+" form", function(e){

        // create and post to a hidden iframe to avoid cross-domain POST limitations
        var iframe = jQuery("<iframe height='0' width='0' tabindex='-1' title='empty'>");
        var uniqueString = "surveyPostContainerIframe" + _targetID;
        var form = target.children("form").first();

        // add the hidden iframe
        jQuery("body").append(iframe);
        iframe.hide();

        // direct the form post into the iframe's window
        iframe[0].contentWindow.name = uniqueString;
        form.attr("target", uniqueString);
        form.attr("action", '//' + _hostname + '/survey_responses');

        // call the native submit, not the jQuery submit wrapper
        // this is to avoid hitting this handler twice (and looping)
        form[0].submit();

        // pull back the thank you page
        jQuery.getJSON("//" + _hostname + "/surveys/" + _surveyID + "/thank_you_page.json", "callback=?", function(data){
          jQuery("#" + _targetID).html(data.html);
        });

        e.preventDefault();
        return false;
      });

      /* Add the survey control methods to the voc object */
      jQuery.getScript('//<%= APP_CONFIG["host"] %>/assets/survey.js')
        .done(function() { VOC.onPageLoad(); });

      return _this;
    }

    function focusSurvey(targetID) {
      var _surveyContainer = jQuery("#"+targetID);
      var focusableElementsString = "a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]";
      var focusableItems = _surveyContainer.find("*")
        .filter(focusableElementsString)
        .filter("*:visible");
      focusableItems.first().focus();
    }

    return {
      /* Define the publicly accessible methods */
      getTargetID: getTargetID,
      getSurveyID: getSurveyID,
      getPageURL:  getPageURL,
      setTargetID: setTargetID,
      loadSurvey: loadSurvey
    };
  };

})();
